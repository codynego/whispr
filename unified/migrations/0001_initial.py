# Generated by Django 4.2.7 on 2025-10-19 17:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ChannelAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(choices=[('email', 'Email'), ('whatsapp', 'WhatsApp'), ('slack', 'Slack'), ('telegram', 'Telegram')], max_length=20)),
                ('provider', models.CharField(choices=[('gmail', 'Gmail'), ('outlook', 'Outlook'), ('meta', 'Meta (WhatsApp)'), ('slack', 'Slack'), ('telegram', 'Telegram')], max_length=50)),
                ('address_or_id', models.CharField(max_length=255)),
                ('access_token', models.TextField(blank=True, null=True)),
                ('refresh_token', models.TextField(blank=True, null=True)),
                ('token_expires_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('last_synced', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channel_accounts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'channel_accounts',
                'unique_together': {('user', 'channel', 'address_or_id')},
            },
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thread_id', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('channel', models.CharField(max_length=50)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('last_message_at', models.DateTimeField(blank=True, null=True)),
                ('last_sender', models.CharField(blank=True, max_length=255, null=True)),
                ('summary', models.TextField(blank=True, null=True)),
                ('next_step_suggestion', models.TextField(blank=True, null=True)),
                ('actionable_data', models.JSONField(blank=True, null=True)),
                ('people_and_orgs', models.JSONField(blank=True, null=True)),
                ('is_archived', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conversations', to='unified.channelaccount')),
            ],
            options={
                'db_table': 'conversations',
                'ordering': ['-last_message_at'],
            },
        ),
        migrations.CreateModel(
            name='UserRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('rule_type', models.CharField(choices=[('sender', 'Sender Address/ID'), ('keyword', 'Keyword in Message'), ('subject', 'Subject Contains (Email only)'), ('body', 'Body/Text Contains'), ('attachment', 'Has Attachment'), ('reply', 'Is a Reply/Thread'), ('ai', 'AI Context Rule')], max_length=50)),
                ('channel', models.CharField(blank=True, max_length=50, null=True)),
                ('value', models.TextField(blank=True, help_text='Email, keyword(s), or pattern depending on rule type', null=True)),
                ('importance', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rules', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Rule',
                'verbose_name_plural': 'User Rules',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.CharField(db_index=True, default='email', max_length=50)),
                ('external_id', models.CharField(db_index=True, max_length=255, unique=True)),
                ('sender', models.CharField(max_length=255)),
                ('sender_name', models.CharField(blank=True, max_length=255, null=True)),
                ('recipients', models.JSONField(default=list)),
                ('content', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('attachments', models.JSONField(blank=True, default=list)),
                ('importance', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=20)),
                ('importance_score', models.FloatField(default=0.5)),
                ('importance_analysis', models.TextField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_starred', models.BooleanField(default=False)),
                ('is_incoming', models.BooleanField(default=True)),
                ('sent_at', models.DateTimeField()),
                ('analyzed_at', models.DateTimeField(blank=True, null=True)),
                ('embedding', models.JSONField(blank=True, null=True)),
                ('embedding_generated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='unified.channelaccount')),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='unified.conversation')),
            ],
            options={
                'db_table': 'messages',
                'ordering': ['-sent_at'],
                'indexes': [models.Index(fields=['-sent_at'], name='messages_sent_at_cea072_idx'), models.Index(fields=['importance'], name='messages_importa_fa7792_idx'), models.Index(fields=['is_read'], name='messages_is_read_6a69c0_idx')],
            },
        ),
    ]
